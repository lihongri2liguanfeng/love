<krpano>
    <!-- the skin -->
    <!-- <include url="skin/defaultskin.xml" /> -->
    <!-- include the combobox.xml plugin -->
    <include url="skin/combobox.xml" />
    <!-- 小行星开场 -->
    <events name="lp_events_" keep="true" onxmlcomplete="set(events[lp_events_].onxmlcomplete,null);
	        if(device.webgl OR device.flash,skin_setup_littleplanetintro(););" />
    <action name="skin_setup_littleplanetintro">
        copy(lp_scene, xml.scene); copy(lp_hlookat, view.hlookat); copy(lp_vlookat, view.vlookat); copy(lp_fov, view.fov); copy(lp_fovmax, view.fovmax); copy(lp_limitview, view.limitview); set(view.fovmax, 170); set(view.limitview, lookto); set(view.vlookatmin, 90); set(view.vlookatmax, 90); set_hotspot_visible(false); set(layer[skin_layer].visible,false);set(layer[skin_layer].alpha,0); set(layer[skin_control_bar].visible,false);set(layer[skin_control_bar].alpha,0); set(layer[skin_splitter_bottom].visible,false);set(layer[skin_splitter_bottom].alpha,0); lookat(calc(lp_hlookat + 30), 90, 150, 1.5, 0, 0); set(lp_running,true); set(events[lp_events].onloadcomplete, delayedcall(2.5, if(lp_scene === xml.scene, set(control.usercontrol, off); copy(view.limitview, lp_limitview); set(view.vlookatmin, null); set(view.vlookatmax, null); tween(view.hlookat|view.vlookat|view.fov|view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0), 3.0, easeOutQuad, set(control.usercontrol, all); tween(view.fovmax, get(lp_fovmax)); ); set(lp_running,false); set_hotspot_visible(true); set(layer[skin_layer].visible,true);tween(layer[skin_layer].alpha,1,1); set(layer[skin_control_bar].visible,true);tween(layer[skin_control_bar].alpha,1,1); set(layer[skin_splitter_bottom].visible,true);tween(layer[skin_splitter_bottom].alpha,1,1); ); ); );
    </action>
    <!-- view settings -->
    <!-- <view hlookat="0" vlookat="0" fov="90" distortion="0.35" fovmax="150" /> -->
    <view hlookat="0" vlookat="0" fovtype="MFOV" fov="90" maxpixelzoom="2.0" fovmin="70" fovmax="150" limitview="auto" />
    <!-- enable autorotation - and enable returing to horizon -->
    <autorotate enabled="true" waittime="0.5" accel="1.0" speed="5.0" horizon="0.0" tofov="90" />
    <!-- load the soundinterface plugin -->
    <plugin name="soundinterface" url.flash="./soundinterface.swf" url.html5="./soundinterface.js" rootpath="" preload="true" keep="true" />
    <!-- the snow plugin -->
    <plugin name="snow" zorder="1" url.html5="./snow.js" url.flash="./snow.swf" floor="0.7" onloaded="hearts();" />
    <!-- start playing the sound -->
    <events name="currentpano" onnewpano="playsound(bgsnd, './mp3/1.mp3',0);" onremovepano="stopsound(bgsnd);" />
    <!-- gyro plugin -->
    <plugin name="skin_gyro" keep="true" url="./gyro2.js" devices="html5.and.touch" enabled="true" />
    <preview url="pic.tiles/preview.jpg" />
    <image type="CUBE" multires="true" tilesize="512">
        <level tiledimagewidth="1792" tiledimageheight="1792">
            <cube url="pic.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />
        </level>
        <level tiledimagewidth="1024" tiledimageheight="1024">
            <cube url="pic.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />
        </level>
    </image>
    <action name="hearts">
        set(plugin[snow].mode, image); set(plugin[snow].imageurl, '%CURRENTXML%/skin/heart.png'); set(plugin[snow].blendmode, normal); set(plugin[snow].flakes, 520); set(plugin[snow].imagescale, .2); set(plugin[snow].speed, 1.0); set(plugin[snow].shake, 4.0); set(plugin[snow].speedvariance, 2.0); set(plugin[snow].spreading, 1.5); set(plugin[snow].wind, 0.5);
    </action>
    <action name="loves">
        set(plugin[snow].mode, image); set(plugin[snow].imageurl, '%CURRENTXML%/skin/love.png'); set(plugin[snow].blendmode, normal); set(plugin[snow].flakes, 1314); set(plugin[snow].imagescale, 1); set(plugin[snow].speed, 0.8); set(plugin[snow].shake, 8.0); set(plugin[snow].speedvariance, 3.0); set(plugin[snow].spreading, 2.5); set(plugin[snow].wind, 0.0);
    </action>
    <action name="skin_setplaybackrate">
        set(plugin[video].playbackrate, %1); set(layer[skin_rate_val].html, calc('%1' + 'x')); layer[skin_settings_r1t].loadstyle(calc('%1' == '0.25' ? 'skintext_sel' : 'skintext')); layer[skin_settings_r2t].loadstyle(calc('%1' == '0.5' ? 'skintext_sel' : 'skintext')); layer[skin_settings_r3t].loadstyle(calc('%1' == '1.0' ? 'skintext_sel' : 'skintext')); layer[skin_settings_r4t].loadstyle(calc('%1' == '1.5' ? 'skintext_sel' : 'skintext')); layer[skin_settings_r5t].loadstyle(calc('%1' == '2.0' ? 'skintext_sel' : 'skintext'));
    </action>
    <action name="skin_update_view_menu">
        copy(layer[skin_view_val].html, layer[skin_settings_v%1t].html); layer[skin_settings_v1t].loadstyle(calc('%1' == '1' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v2t].loadstyle(calc('%1' == '2' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v3t].loadstyle(calc('%1' == '3' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v4t].loadstyle(calc('%1' == '4' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v5t].loadstyle(calc('%1' == '5' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v6t].loadstyle(calc('%1' == '6' ? 'skintext_sel' : 'skintext')); layer[skin_settings_v7t].loadstyle(calc('%1' == '7' ? 'skintext_sel' : 'skintext'));
    </action>
    <action name="skin_view_flat">
        set(plugin[skin_gyro].enabled, false); skin_update_view_menu(1); if(videointerface_isflat !== true, set(videointerface_isflat, true); stoptween(view.fov); mod(view.hlookat, 360); set(view.limitview, off); set(view.maxpixelzoom, 0); copy(videointerface_backup_fovmin, view.fovmin); set(view.fovmin, 0.01); set(control.usercontrol, off); copy(videointerface_backup_mouse, control.mouse); set(control.mouse, drag); copy(current_fov, view.fov); copy(videointerface_backup_fovtype, view.fovtype); remapfovtype(current_fov, get(view.fovtype), HFOV); set(view.fovtype, HFOV); copy(view.fov, current_fov); copy(startfov, current_fov); copy(image_hfov, image.hfov); tween(image_hfov, 1.0, 3.0, linear, set(control.usercontrol,all); set(view.fovmin, 0.25); set(view.hlookatmin, -2); set(view.hlookatmax, +2); set(view.vlookatmin, -1); set(view.vlookatmax, +1); set(view.limitview, range); , if(image_hfov LT 90, mul(view.fov, image_hfov, 1.1); , sub(hr, image_hfov, 90); div(hr, 270); sub(hr2, 1, hr); mul(a, startfov, hr); mul(b, 99, hr2); add(view.fov, a,b); ); copy(image.hfov, image_hfov); set(image.vfov, 0); updateobject(true, true); ); adjusthlookat(0); tween(view.hlookat, 0, 1.5); tween(view.vlookat, 0, 1.5); );
    </action>
    <action name="skin_view_non_flat">if(videointerface_isflat === true, set(videointerface_isflat, false); set(view.limitview, off); set(control.usercontrol, all); copy(control.mouse, videointerface_backup_mouse); copy(current_fov, view.fov); remapfovtype(current_fov, get(view.fovtype), get(videointerface_backup_fovtype)); copy(view.fovtype, videointerface_backup_fovtype); copy(view.fov, current_fov); copy(image_hfov, image.hfov); tween(image_hfov, 360.0, 3.0, linear, copy(view.fovmin, videointerface_backup_fovmin); set(view.limitview, auto); set(view.hlookatmin, -180); set(view.hlookatmax, +180); set(view.vlookatmin, -90); set(view.vlookatmax, +90); , copy(image.hfov, image_hfov); set(image.vfov, 0); updateobject(true, true); ); tween(view.fov, 120, 1.5); ); if(view.vlookat LT -60 OR view.vlookat GT +60, tween(view.vlookat, 0.0, 1.0, easeInOutSine); );</action>
    <action name="skin_view_look_straight">skin_view_non_flat(); if(view.vlookat LT -80 OR view.vlookat GT +80, tween(view.vlookat, 0.0, 1.0, easeInOutSine); tween(view.fov, 100, distance(150,0.8)); );</action>
    <action name="skin_view_normal">skin_update_view_menu(2); skin_view_look_straight(); tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 0.0, distance(1.0,0.5)); tween(view.distortion, 0.0, distance(1.0,0.5));</action>
    <action name="skin_view_fisheye">skin_update_view_menu(3); skin_view_look_straight(); tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 0.0, distance(1.0,0.5)); tween(view.distortion, 0.35, distance(1.0,0.5));tween(view.architectural, 0.0, 0.25); tween(view.fisheye, 1.30, distance(1.0, 0.75), easeOutQuad); tween(view.fov, 142, distance(160, 0.75), easeOutQuad); tween(view.vlookat, -90, distance(100, 0.75), easeOutQuad); add(new_hlookat, view.hlookat, 123); tween(view.hlookat, get(new_hlookat), distance(100, 0.75), easeOutQuad);
    </action>
    <action name="skin_view_stereographic">skin_update_view_menu(4); skin_view_look_straight(); tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 0.0, distance(1.0,0.5)); tween(view.distortion, 1.0, distance(1.0,0.8));</action>
    <action name="skin_view_back">skin_update_view_menu(6); skin_view_look_straight(); tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 1.0, distance(1.0,0.8)); tween(view.distortion, 1.0, distance(1.0,0.8)); tween(view.fov, 200, distance(200, 0.75), easeOutQuad); tween(view.vlookat, -90, distance(100, 0.75), easeOutQuad); if(view.distortion LT 0.1, tween(view.distortion, 1.0, distance(1.0,0.8)); );</action>
    <action name="skin_view_littleplanet">skin_update_view_menu(7); if(videointerface_isflat === true, skin_view_non_flat(); tween(view.fov, 150, distance(150,0.8)); tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 0.0, distance(1.0,0.5)); tween(view.distortion, 1.0, distance(1.0,0.8)); delayedcall(0.5, tween(view.vlookat, 90, distance(100,0.8)); tween(view.hlookat, 0, distance(100,0.8)); ); , tween(view.architectural, 0.0, distance(1.0,0.5)); tween(view.pannini, 0.0, distance(1.0,0.5)); tween(view.distortion, 1.0, distance(1.0,0.8)); tween(view.fov, 150, distance(150,0.8)); tween(view.vlookat, 90, distance(100,0.8)); add(new_hlookat, view.hlookat, 0.0); tween(view.hlookat, get(new_hlookat), distance(100,0.8)); );</action>
    <action name="gyro">
        switch(plugin[skin_gyro].enabled);
    </action>
    <!-- and a combobox for selecting different snow effects -->
    <combobox name="combobox" design="vtour" align="leftbottom" x="20" y="20" zorder="2">
        <item name="lhr" caption="黎洪日个人工作室" />
        <item name="love" caption="爱心效果" onclick="hearts();" />
        <item name="flue" caption="花瓣效果" onclick="loves();" />
        <item name="nv" caption="普通视图" onclick="skin_view_normal();" />
        <item name="fv" caption="鱼眼视图" onclick="skin_view_fisheye();" />
        <item name="sv" caption="立体视图" onclick="skin_view_stereographic();" />
        <item name="pv" caption="黑洞视图" onclick="skin_view_back();" />
        <item name="lp" caption="行星视图" onclick="skin_view_littleplanet();" />
        <item name="bg" caption="音效开关" onclick="pausesoundtoggle(bgsnd);" />
        <item name="gyro" caption="陀螺仪开关" onclick="gyro();" />
    </combobox>
</krpano>
